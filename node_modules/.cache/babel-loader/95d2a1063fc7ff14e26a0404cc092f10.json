{"ast":null,"code":"var _jsxFileName = \"/Users/jennyhwang/Desktop/foodOrdering/src/components/store/cartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cartContext\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCart = {\n  items: [],\n  totalAmount: 0\n}; //reducer function needs a state snapshot (the last state), and an action\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {}\n\n  if (action.type === \"REMOVE_ITEM\") {}\n}; //Cart Provider component will allow things wrapped in CartProvider access to the Cart Context store.\n\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchAction] = useReducer(cartReducer, defaultCart);\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: item => {},\n    removeItem: id => {}\n  };\n\n  const addItemHandler = item => {\n    dispatchAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"HoBysmQqTt3Go6pXusqt8SGz6ww=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","defaultCart","items","totalAmount","cartReducer","state","action","type","CartProvider","props","cartState","dispatchAction","cartContext","addItem","item","removeItem","id","addItemHandler","removeItemHandler","children"],"sources":["/Users/jennyhwang/Desktop/foodOrdering/src/components/store/cartProvider.js"],"sourcesContent":["import CartContext from \"./cartContext\";\nimport { useReducer } from \"react\";\n\nconst defaultCart = {\n  items: [],\n  totalAmount: 0,\n};\n\n//reducer function needs a state snapshot (the last state), and an action\nconst cartReducer = (state, action) => {\n if (action.type === \"ADD_ITEM\") {\n\n }\n\n if (action.type === \"REMOVE_ITEM\") {\n     \n}\n\n\n};\n\n//Cart Provider component will allow things wrapped in CartProvider access to the Cart Context store.\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchAction] = useReducer(cartReducer, defaultCart);\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: (item) => {},\n    removeItem: (id) => {},\n  };\n\n  const addItemHandler = (item) => {\n    dispatchAction({\n      type: \"ADD_ITEM\",\n      item: item,\n    });\n  };\n\n  const removeItemHandler = () => {};\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,EADW;EAElBC,WAAW,EAAE;AAFK,CAApB,C,CAKA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACtC,IAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC,CAE/B;;EAED,IAAID,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC,CAEnC;AAGA,CAVD,C,CAYA;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,cAAZ,IAA8BX,UAAU,CAACI,WAAD,EAAcH,WAAd,CAA9C;EAEA,MAAMW,WAAW,GAAG;IAClBV,KAAK,EAAEQ,SAAS,CAACR,KADC;IAElBC,WAAW,EAAEO,SAAS,CAACP,WAFL;IAGlBU,OAAO,EAAGC,IAAD,IAAU,CAAE,CAHH;IAIlBC,UAAU,EAAGC,EAAD,IAAQ,CAAE;EAJJ,CAApB;;EAOA,MAAMC,cAAc,GAAIH,IAAD,IAAU;IAC/BH,cAAc,CAAC;MACbJ,IAAI,EAAE,UADO;MAEbO,IAAI,EAAEA;IAFO,CAAD,CAAd;EAID,CALD;;EAOA,MAAMI,iBAAiB,GAAG,MAAM,CAAE,CAAlC;;EAEA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEN,WAA7B;IAAA,UACGH,KAAK,CAACU;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxBD;;GAAMX,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}