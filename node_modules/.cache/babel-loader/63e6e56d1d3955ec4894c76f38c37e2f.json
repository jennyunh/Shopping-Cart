{"ast":null,"code":"var _jsxFileName = \"/Users/jennyhwang/Desktop/foodOrdering/src/components/store/cartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cartContext\";\nimport { useReducer } from \"react\";\n/*an item structure:\nid: props.id,\nname: props.name,\namount: amount,\nprice: props.price\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCart = {\n  items: [],\n  totalAmount: 0\n}; //reducer function needs a state snapshot (the last state), and an action\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const existingItemInd = state.items.findIndex(item => item.id === action.item.id); //if the item exists in the items array, it will return an index. Otherwise it is null.\n\n    const existingItem = state.items[existingItemInd];\n    let updatedItem;\n    let updatedItems;\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount; //If the item does exist in the array, update the amount of the item, then update that item in the array\n\n    if (existingItem) {\n      updatedItem = { ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemInd] = updatedItem;\n    } else {\n      updatedItem = { ...action.item\n      };\n      updatedItems = state.items.concat(action.item);\n    }\n\n    console.log(state.items[existingItemInd]);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE_ITEM\") {\n    const existingItemInd = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingItemInd];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemInd] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCart;\n}; //Cart Provider component will allow things wrapped in CartProvider access to the Cart Context store.\n\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchAction] = useReducer(cartReducer, defaultCart); //reformat by taking the cartState to include the methods then send that value over to the cartContext store.\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: item => {\n      addItemHandler(item);\n    },\n    removeItem: id => {\n      removeItemHandler(id);\n    }\n  };\n\n  const addItemHandler = item => {\n    dispatchAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = item => {\n    dispatchAction({\n      type: \"REMOVE_ITEM\",\n      item: item\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"HoBysmQqTt3Go6pXusqt8SGz6ww=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","defaultCart","items","totalAmount","cartReducer","state","action","type","existingItemInd","findIndex","item","id","existingItem","updatedItem","updatedItems","updatedTotalAmount","price","amount","concat","console","log","filter","CartProvider","props","cartState","dispatchAction","cartContext","addItem","addItemHandler","removeItem","removeItemHandler","children"],"sources":["/Users/jennyhwang/Desktop/foodOrdering/src/components/store/cartProvider.js"],"sourcesContent":["import CartContext from \"./cartContext\";\nimport { useReducer } from \"react\";\n\n/*an item structure:\nid: props.id,\nname: props.name,\namount: amount,\nprice: props.price\n*/\n\nconst defaultCart = {\n  items: [],\n  totalAmount: 0,\n};\n\n//reducer function needs a state snapshot (the last state), and an action\nconst cartReducer = (state, action) => {\n\n  if (action.type === \"ADD_ITEM\") {\n    const existingItemInd = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    //if the item exists in the items array, it will return an index. Otherwise it is null.\n    const existingItem = state.items[existingItemInd];\n\n    let updatedItem;\n    let updatedItems;\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    //If the item does exist in the array, update the amount of the item, then update that item in the array\n    if (existingItem) {\n      updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemInd] = updatedItem;\n    } else {\n      updatedItem = { ...action.item };\n      updatedItems = state.items.concat(action.item);\n    }\n\nconsole.log(state.items[existingItemInd])\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n\n\n\n\n  if (action.type === \"REMOVE_ITEM\") {\n    const existingItemInd = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingItemInd];\n\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingItemInd] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  return defaultCart;\n};\n\n//Cart Provider component will allow things wrapped in CartProvider access to the Cart Context store.\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchAction] = useReducer(cartReducer, defaultCart);\n\n  //reformat by taking the cartState to include the methods then send that value over to the cartContext store.\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: (item) => {\n      addItemHandler(item);\n    },\n    removeItem: (id) => {\n      removeItemHandler(id);\n    },\n  };\n\n  const addItemHandler = (item) => {\n    dispatchAction({\n      type: \"ADD_ITEM\",\n      item: item,\n    });\n  };\n\n  const removeItemHandler = (item) => {\n    dispatchAction({\n      type: \"REMOVE_ITEM\",\n      item: item,\n    });\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,EADW;EAElBC,WAAW,EAAE;AAFK,CAApB,C,CAKA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAErC,IAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;IAC9B,MAAMC,eAAe,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CACrBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EADZ,CAAxB,CAD8B,CAK9B;;IACA,MAAMC,YAAY,GAAGP,KAAK,CAACH,KAAN,CAAYM,eAAZ,CAArB;IAEA,IAAIK,WAAJ;IACA,IAAIC,YAAJ;IACA,MAAMC,kBAAkB,GACtBV,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYM,KAAZ,GAAoBV,MAAM,CAACI,IAAP,CAAYO,MADtD,CAV8B,CAa9B;;IACA,IAAIL,YAAJ,EAAkB;MAChBC,WAAW,GAAG,EACZ,GAAGD,YADS;QAEZK,MAAM,EAAEL,YAAY,CAACK,MAAb,GAAsBX,MAAM,CAACI,IAAP,CAAYO;MAF9B,CAAd;MAIAH,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAV,CAAf;MACAY,YAAY,CAACN,eAAD,CAAZ,GAAgCK,WAAhC;IACD,CAPD,MAOO;MACLA,WAAW,GAAG,EAAE,GAAGP,MAAM,CAACI;MAAZ,CAAd;MACAI,YAAY,GAAGT,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACI,IAA1B,CAAf;IACD;;IAELS,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACH,KAAN,CAAYM,eAAZ,CAAZ;IAEI,OAAO;MACLN,KAAK,EAAEY,YADF;MAELX,WAAW,EAAEY;IAFR,CAAP;EAID;;EAMD,IAAIT,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;IACjC,MAAMC,eAAe,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CACrBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EADP,CAAxB;IAGA,MAAMC,YAAY,GAAGP,KAAK,CAACH,KAAN,CAAYM,eAAZ,CAArB;IAEA,MAAMO,kBAAkB,GAAGV,KAAK,CAACF,WAAN,GAAoBS,YAAY,CAACI,KAA5D;IAEA,IAAIF,YAAJ;;IAEA,IAAIF,YAAY,CAACK,MAAb,KAAwB,CAA5B,EAA+B;MAC7BH,YAAY,GAAGT,KAAK,CAACH,KAAN,CAAYmB,MAAZ,CAAoBX,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EAAhD,CAAf;IACD,CAFD,MAEO;MACL,MAAME,WAAW,GAAG,EAAE,GAAGD,YAAL;QAAmBK,MAAM,EAAEL,YAAY,CAACK,MAAb,GAAsB;MAAjD,CAApB;MACAH,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAV,CAAf;MACAY,YAAY,CAACN,eAAD,CAAZ,GAAgCK,WAAhC;IACD;;IAED,OAAO;MACLX,KAAK,EAAEY,YADF;MAELX,WAAW,EAAEY;IAFR,CAAP;EAID;;EAED,OAAOd,WAAP;AACD,CAjED,C,CAmEA;;;AAEA,MAAMqB,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,cAAZ,IAA8BzB,UAAU,CAACI,WAAD,EAAcH,WAAd,CAA9C,CAD8B,CAG9B;;EACA,MAAMyB,WAAW,GAAG;IAClBxB,KAAK,EAAEsB,SAAS,CAACtB,KADC;IAElBC,WAAW,EAAEqB,SAAS,CAACrB,WAFL;IAGlBwB,OAAO,EAAGjB,IAAD,IAAU;MACjBkB,cAAc,CAAClB,IAAD,CAAd;IACD,CALiB;IAMlBmB,UAAU,EAAGlB,EAAD,IAAQ;MAClBmB,iBAAiB,CAACnB,EAAD,CAAjB;IACD;EARiB,CAApB;;EAWA,MAAMiB,cAAc,GAAIlB,IAAD,IAAU;IAC/Be,cAAc,CAAC;MACblB,IAAI,EAAE,UADO;MAEbG,IAAI,EAAEA;IAFO,CAAD,CAAd;EAID,CALD;;EAOA,MAAMoB,iBAAiB,GAAIpB,IAAD,IAAU;IAClCe,cAAc,CAAC;MACblB,IAAI,EAAE,aADO;MAEbG,IAAI,EAAEA;IAFO,CAAD,CAAd;EAID,CALD;;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEgB,WAA7B;IAAA,UACGH,KAAK,CAACQ;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAlCD;;GAAMT,Y;;KAAAA,Y;AAoCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}