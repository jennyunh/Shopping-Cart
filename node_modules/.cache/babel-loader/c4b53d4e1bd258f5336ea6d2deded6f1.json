{"ast":null,"code":"var _jsxFileName = \"/Users/jennyhwang/Desktop/foodOrdering/src/components/store/cartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from './cartContext';\nimport { useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCart = {\n  items: [],\n  totalAmount: 0\n}; //reducer function needs a state snapshot (the last state), and an action\n\nconst cartReducer = (state, action) => {\n  return defaultCart;\n}; //Cart Provider component will allow things wrapped in CartProvider access to the Cart Context store.\n\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchAction] = useReducer(cartReducer, defaultCart);\n  const cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: item => {},\n    removeItem: id => {}\n  };\n\n  const addItemHandler = () => {};\n\n  const removeItemHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: theValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CartProvider, \"HoBysmQqTt3Go6pXusqt8SGz6ww=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useContext","useReducer","defaultCart","items","totalAmount","cartReducer","state","action","CartProvider","props","cartState","dispatchAction","cartContext","addItem","item","removeItem","id","addItemHandler","removeItemHandler","theValue","children"],"sources":["/Users/jennyhwang/Desktop/foodOrdering/src/components/store/cartProvider.js"],"sourcesContent":["import CartContext from './cartContext';\nimport { useContext, useReducer } from 'react';\n\n\nconst defaultCart = {\n    items: [],\n    totalAmount: 0\n};\n\n//reducer function needs a state snapshot (the last state), and an action\nconst cartReducer = (state, action) => {\nreturn defaultCart\n}\n\n\n//Cart Provider component will allow things wrapped in CartProvider access to the Cart Context store.\n\nconst CartProvider = props => {\n   const [cartState, dispatchAction] = useReducer(cartReducer, defaultCart);\n\n   const cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: (item) => {},\n    removeItem: (id) => {}\n}\n\n    const addItemHandler = () => {};\n\n    const removeItemHandler = () => {};\n\nreturn <CartContext.Provider value={theValue}>\n    {props.children}\n</CartContext.Provider>\n\n};\n\nexport default CartProvider"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,OAAvC;;AAGA,MAAMC,WAAW,GAAG;EAChBC,KAAK,EAAE,EADS;EAEhBC,WAAW,EAAE;AAFG,CAApB,C,CAKA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACvC,OAAOL,WAAP;AACC,CAFD,C,CAKA;;;AAEA,MAAMM,YAAY,GAAGC,KAAK,IAAI;EAAA;;EAC3B,MAAM,CAACC,SAAD,EAAYC,cAAZ,IAA8BV,UAAU,CAACI,WAAD,EAAcH,WAAd,CAA9C;EAEA,MAAMU,WAAW,GAAG;IACnBT,KAAK,EAAE,EADY;IAEnBC,WAAW,EAAE,CAFM;IAGnBS,OAAO,EAAGC,IAAD,IAAU,CAAE,CAHF;IAInBC,UAAU,EAAGC,EAAD,IAAQ,CAAE;EAJH,CAApB;;EAOC,MAAMC,cAAc,GAAG,MAAM,CAAE,CAA/B;;EAEA,MAAMC,iBAAiB,GAAG,MAAM,CAAE,CAAlC;;EAEJ,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,QAA7B;IAAA,UACFV,KAAK,CAACW;EADJ;IAAA;IAAA;IAAA;EAAA,QAAP;AAIC,CAlBD;;GAAMZ,Y;;KAAAA,Y;AAoBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}